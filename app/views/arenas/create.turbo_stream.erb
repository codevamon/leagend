<%= turbo_stream.replace "modal", "" %>

<%= turbo_stream.prepend "flash" do %>
  <div class="alert alert-success alert-dismissible fade show mb-2" role="alert" 
       data-controller="flash-message">
    <i class="fas fa-check-circle me-2"></i>
    Arena "<%= @arena.name %>" creada y seleccionada exitosamente.
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  </div>
<% end %>

<%= turbo_stream.replace "arena-select-frame" do %>
  <div id="arena-select-frame">
    <div class="row g-3" data-duel-steps-target="arenaGrid">
      <%= render partial: "arenas/arena_card", collection: @arenas, as: :arena, locals: { selectable: true, selected_arena_id: @arena.id } %>
    </div>
  </div>
<% end %>

<%= turbo_stream.update "duel_arena_id" do %>
  <%= @arena.id %>
<% end %>

<%= turbo_stream.append "body" do %>
  <script nonce="<%= content_security_policy_nonce %>">
    document.dispatchEvent(new CustomEvent('leagend:arena_selected', { detail: { id: '<%= @arena.id %>' } }));
  </script>
<% end %>

<%= turbo_stream.invoke "document.dispatchEvent", args: ["leagend:arena_created", { detail: { id: <%= @arena.id %>, name: "<%= @arena.name %>" } }] %>

<%= turbo_stream.append "body" do %>
  <script nonce="<%= content_security_policy_nonce %>">
    // Cerrar modal usando el controller Stimulus
    document.addEventListener('DOMContentLoaded', function() {
      const modalController = application.getControllerForElementAndIdentifier(
        document.querySelector('[data-controller="modal"]'), 
        'modal'
      );
      
      if (modalController) {
        console.log('Cerrando modal desde turbo_stream');
        modalController.close();
      } else {
        console.log('No se encontró el controlador modal');
      }
      
      // Actualizar el wizard con la nueva arena creada
      setTimeout(() => {
        // Buscar el controlador duel-steps
        const duelStepsController = application.getControllerForElementAndIdentifier(
          document.querySelector('[data-controller="duel-steps"]'), 
          'duel-steps'
        );
        
        if (duelStepsController) {
          console.log('Actualizando wizard con arena ID: <%= @arena.id %>');
          
          // Seleccionar la nueva arena en el wizard
          duelStepsController.selectArenaById('<%= @arena.id %>');
          
          // Actualizar el resumen
          if (duelStepsController.updateSummary) {
            duelStepsController.updateSummary();
          }
          
          console.log('Wizard actualizado correctamente con la nueva arena');
        } else {
          console.log('No se encontró el controlador duel-steps');
        }
      }, 100);
    });
  </script>
<% end %>
